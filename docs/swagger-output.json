{
  "openapi": "3.0.0",
  "info": {
    "title": "Automarketti API",
    "description": "Automarketti site API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://automarketbackend.onrender.com",
      "description": "Production server"
    },
    {
      "url": "http://localhost:3001",
      "description": "Testing server"
    }
  ],
  "tags": [
    {
      "name": "Sell item",
      "description": "Individual sell announcement endpoints"
    },
    {
      "name": "Sell items",
      "description": "All sell announcements endpoints"
    },
    {
      "name": "Buy item",
      "description": "Individual sell announcement endpoints"
    },
    {
      "name": "Buy items",
      "description": "All buy announcements endpoints"
    },
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "User",
      "description": "User profile endpoints"
    }
  ],
  "paths": {
    "/api/items/{index}": {
      "get": {
        "tags": [
          "Sell items"
        ],
        "summary": "Response all announcements",
        "description": "",
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/items/sell/{index}": {
      "get": {
        "tags": [
          "Sell items"
        ],
        "summary": "Response all sell announcements",
        "description": "",
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/items/buy/{index}": {
      "get": {
        "tags": [
          "Buy items"
        ],
        "summary": "Response all buy announcements",
        "description": "",
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/item/": {
      "post": {
        "tags": [
          "Sell item"
        ],
        "summary": "Save a new car announcement",
        "description": "",
        "responses": {
          "201": {
            "description": "Response back saved car, id and message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "675613089b7bd846447b9d0c",
                      "description": "Item id"
                    },
                    "mark": {
                      "type": "string",
                      "example": "Volvo",
                      "description": "Car mark"
                    },
                    "model": {
                      "type": "string",
                      "example": "V70",
                      "description": "Car model"
                    },
                    "fuelType": {
                      "type": "string",
                      "example": "diesel",
                      "description": "Car fuel type"
                    },
                    "mileage": {
                      "type": "number",
                      "example": 120000,
                      "description": "Car mileage or odometer reading"
                    },
                    "gearBoxType": {
                      "type": "string",
                      "example": "manual",
                      "description": "Car gear box type"
                    },
                    "price": {
                      "type": "number",
                      "example": 10000,
                      "description": "Car price"
                    },
                    "description": {
                      "type": "string",
                      "example": "Hyvä auto",
                      "description": "Announcement description"
                    },
                    "onSale": {
                      "type": "boolean",
                      "example": "true",
                      "description": "Item sale status"
                    },
                    "createdDate": {
                      "type": "date",
                      "example": "2024-12-09T12:00:00.000Z",
                      "description": "Date when item is `published`"
                    },
                    "photoURLs": {
                      "description": "Car full size photo urls",
                      "type": "array",
                      "format": "uri",
                      "example": [
                        "https://automarketbackend.onrender.com/api/photo/7cca8e54-591f-4698-bca4-d48cc47e89f2.jpg",
                        "https://automarketbackend.onrender.com/api/photo/7f01860c-42b0-40c1-8ec5-432a9477f3bf.jpg"
                      ]
                    },
                    "thumbnailURLs": {
                      "description": "Car thumbnail photo urls",
                      "type": "array",
                      "format": "uri",
                      "example": [
                        "https://automarketbackend.onrender.com/api/photo/thumb_7cca8e54-591f-4698-bca4-d48cc47e89f2.jpg",
                        "https://automarketbackend.onrender.com/api/photo/thumb_7f01860c-42b0-40c1-8ec5-432a9477f3bf.jpg"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "mark": {
                    "type": "string",
                    "example": "Volvo",
                    "description": "Car mark"
                  },
                  "model": {
                    "type": "string",
                    "example": "V70",
                    "description": "Car model"
                  },
                  "fuelType": {
                    "type": "string",
                    "example": "diesel",
                    "description": "Car fuel type"
                  },
                  "mileage": {
                    "type": "number",
                    "example": 120000,
                    "description": "Car mileage or odometer reading"
                  },
                  "gearBoxType": {
                    "type": "string",
                    "example": "manual",
                    "description": "Car gear box type"
                  },
                  "price": {
                    "type": "number",
                    "example": 10000,
                    "description": "Car price"
                  },
                  "description": {
                    "type": "string",
                    "example": "Hyvä auto",
                    "description": "Announcement description"
                  },
                  "photos": {
                    "description": "Car photos",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                },
                "required": [
                  "mark",
                  "model",
                  "fuelType",
                  "mileage",
                  "gearBoxType",
                  "price"
                ]
              }
            }
          }
        }
      },
      "put": {
        "description": "",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "example": "any"
                  },
                  "announcementType": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/item/{id}": {
      "get": {
        "tags": [
          "Sell item"
        ],
        "summary": "Get individual car announcement",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response requested car",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "675613089b7bd846447b9d0c",
                      "description": "Item id"
                    },
                    "mark": {
                      "type": "string",
                      "example": "Volvo",
                      "description": "Car mark"
                    },
                    "model": {
                      "type": "string",
                      "example": "V70",
                      "description": "Car model"
                    },
                    "fuelType": {
                      "type": "string",
                      "example": "diesel",
                      "description": "Car fuel type"
                    },
                    "mileage": {
                      "type": "number",
                      "example": 120000,
                      "description": "Car mileage or odometer reading"
                    },
                    "gearBoxType": {
                      "type": "string",
                      "example": "manual",
                      "description": "Car gear box type"
                    },
                    "price": {
                      "type": "number",
                      "example": 10000,
                      "description": "Car price"
                    },
                    "description": {
                      "type": "string",
                      "example": "Hyvä auto",
                      "description": "Announcement description"
                    },
                    "onSale": {
                      "type": "boolean",
                      "example": "true",
                      "description": "Item sale status"
                    },
                    "createdDate": {
                      "type": "date",
                      "example": "2024-12-09T12:00:00.000Z",
                      "description": "Date when item is `published`"
                    },
                    "photoURLs": {
                      "description": "Car full size photo urls",
                      "type": "array",
                      "format": "uri",
                      "example": [
                        "https://automarketbackend.onrender.com/api/photo/7cca8e54-591f-4698-bca4-d48cc47e89f2.jpg",
                        "https://automarketbackend.onrender.com/api/photo/7f01860c-42b0-40c1-8ec5-432a9477f3bf.jpg"
                      ]
                    },
                    "thumbnailURLs": {
                      "description": "Car thumbnail photo urls",
                      "type": "array",
                      "format": "uri",
                      "example": [
                        "https://automarketbackend.onrender.com/api/photo/thumb_7cca8e54-591f-4698-bca4-d48cc47e89f2.jpg",
                        "https://automarketbackend.onrender.com/api/photo/thumb_7f01860c-42b0-40c1-8ec5-432a9477f3bf.jpg"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Error message if requested sell car announcement not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Announcement not found",
                      "description": "Message if announcement not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sell item"
        ],
        "summary": "Delete individual car announcement",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/item/active/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/photo/{fileName}": {
      "get": {
        "tags": [
          "Item"
        ],
        "summary": "Announcement photos download",
        "description": "",
        "parameters": [
          {
            "name": "fileName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Requested photo filename"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested photo",
            "content": {
              "image/jpeg": {
                "type": "object",
                "properties": {
                  "type": "file"
                }
              }
            }
          }
        }
      }
    },
    "/api/registration/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User registration",
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/login/": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Users login endpoint",
        "description": "",
        "responses": {
          "200": {
            "description": "Responses user login details in JSONWebToken",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciplJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3RpIiwicm9sZeI6InVzZXIiLCJpZCI6xjY3NTAxYjMzODAxNjU4MDliMjUxMzRlNSIsImlhdCI6MTczMzMwMzcwMSwiZXhwIjoxNzMzMzA3MzAxfQ.aLJeXX_VINMwL1i_n9ad0OOJflObUTZHbzQiljt01Jw"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "All users profile data",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/user/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Single user profile data",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/user/{id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete single user profile and all user announcements",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/message/": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Messages between users",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recipientUserId": {
                    "example": "any"
                  },
                  "message": {
                    "example": "any"
                  },
                  "announcementId": {
                    "example": "any"
                  },
                  "topicId": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/message/topics/{index}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/message/topics/{id}/{index}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Item": {
        "type": "object",
        "properties": {
          "mark": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "model": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "fuelType": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "mileage": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "number"
              }
            }
          },
          "gearBoxType": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "price": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "number"
              }
            }
          },
          "description": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "photos": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "array"
              },
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "binary"
                  }
                }
              }
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          },
          "password": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "string"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "in": "header",
        "name": "Authorization",
        "description": "Bearer Token"
      }
    }
  }
}